akka {
  loglevel = "INFO"
  server {
    name = "SimpleReviews"
    interface = "0.0.0.0"
    port = ${PORT}
  }
}

db {
  # You can declare as many datasources as you want.
  # By convention, the default datasource is named `default`
  driver = "slick.driver.PostgresDriver$"
  db {
    url= ${SLICK_URL}
    driver = org.postgresql.Driver
    user= ${SLICK_USER}
    password= ${SLICK_PASS}
    numThreads = ${SLICK_CON}
    maxConnections = ${db.db.numThreads}
    queueSize = 1000
    connectionTimeout = 1s
  }
  dispatcher {
    # Dispatcher is the name of the event-based dispatcher
    type = Dispatcher
    # What kind of ExecutionService to use
    executor = "fork-join-executor"
    # Configuration for the fork join pool
    fork-join-executor {
      # Min number of threads to cap factor-based parallelism number to
      parallelism-min = 1
      # Parallelism (threads) ... ceil(available processors * factor)
      parallelism-factor = 2.5
      # Max number of threads to cap factor-based parallelism number to
      parallelism-max = 10
    }
    # Throughput defines the maximum number of messages to be
    # processed per actor before the thread jumps to the next actor.
    # Set to 1 for as fair as possible.
    throughput = 1
  }
}

jwt-config{
  client {
    token = "authorization"
    signature = ${JWT_SIG}
    encryption = "HS256"
    claims = [
      "sub"
    ]
  }
}

services {
  facebook {
    host =  "graph.facebook.com "
    dispatcher {
      # Dispatcher is the name of the event-based dispatcher
      type = Dispatcher
      # What kind of ExecutionService to use
      executor = "fork-join-executor"
      # Configuration for the fork join pool
      fork-join-executor {
        # Min number of threads to cap factor-based parallelism number to
        parallelism-min = 1
        # Parallelism (threads) ... ceil(available processors * factor)
        parallelism-factor = 2.5
        # Max number of threads to cap factor-based parallelism number to
        parallelism-max = 10
      }
      # Throughput defines the maximum number of messages to be
      # processed per actor before the thread jumps to the next actor.
      # Set to 1 for as fair as possible.
      throughput = 1
    }
  }
}